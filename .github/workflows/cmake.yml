name: C/C++ CI

on: [push, pull_request]

jobs:
  move-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Move ci tag
        uses: s3krit/walking-tag-action@d04f7a5
        with:
          TAG_NAME: continous
          TAG_MESSAGE: |
            Last commit build by the CI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref == 'refs/heads/master'

  build:
    needs: [move-tag]
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        config: [Release]

    steps:
      - name: Set up build environment (macos-latest)
        run: |
          sudo xcode-select -s "/Applications/Xcode_11.7.app"
          brew install ccache
          echo "/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
          echo "CCACHE_DIR=/tmp/ccache" >> $GITHUB_ENV
        if: matrix.os == 'macos-latest'

      - name: Set up build environment (ubuntu-latest)
        run: |
          sudo apt-get update
          sudo apt-get -y install ccache libxrandr-dev libxinerama-dev libx11-dev libxcursor-dev libxi-dev libxext-dev 
          echo "CCACHE_DIR=/tmp/ccache" >> $GITHUB_ENV
        if: matrix.os == 'ubuntu-latest'

      - name: Set up build environment (windows-latest)
        shell: bash
        run: echo "BOOST_ROOT=$BOOST_ROOT_1_72_0" >> $GITHUB_ENV
        if: matrix.os == 'windows-latest'

      - uses: actions/cache@v1
        with:
          path: /tmp/ccache
          key: ccache-${{ matrix.os }}-${{ matrix.config }}-${{ github.sha }}
          restore-keys: ccache-${{ matrix.os }}-${{ matrix.config }}-
        if: matrix.os != 'windows-latest'

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: CMake configure
        run: cmake -B build -DCI=ON -DCMAKE_BUILD_TYPE=${{ matrix.config }}

      - name: CMake build
        run: cmake --build build --config ${{ matrix.config }} --parallel 2

      - name: Compute git short sha
        id: git_short_sha
        run: echo "::set-output name=value::$(git rev-parse --short HEAD)"

      - uses: actions/upload-artifact@v2
        with:
          name: masterrahool-${{ steps.git_short_sha.outputs.value }}-${{ matrix.os }}
          path: ${projectDir}\\out\\build\\${name}

      - name: Zip Artifacts
        uses: papeloto/action-zip@5f1c4aa
        with:
          files: ${projectDir}\\out\\build\\${name}
          dest: ${{ matrix.os }}.zip
        if: github.ref == 'refs/heads/master'

      - name: Update the CI tag
        uses: Xotl/cool-github-releases@v1
        with:
          mode: update
          isPrerelease: false
          tag_name: continous
          release_name: "Automatic CI builds"
          body_mrkdwn: |
            _Corresponding commit: ${{ github.sha }}_
          assets: ${{ matrix.os }}.zip
          replace_assets: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref == 'refs/heads/master'
